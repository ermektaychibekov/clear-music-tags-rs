stages:
  - build-test
  - trigger-deployment

variables:
  PIPELINE_REPO: "gitlab.com/ermektaychibekov/pipeline.git"

build-test:
  stage: build-test
  image: 
    name: rust:latest
    entrypoint: [""]
  script:
    - go build -o tag-cleaner ./...
    - go test -v ./...
  artifacts:
    paths:
      - tag-cleaner
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

trigger-deployment:
  stage: trigger-deployment
  image: registry.gitlab.com/gitlab-org/cli:latest
  script:
    - glab auth login --with-token $GITLAB_TOKEN
    - |
      glab ci run \
        --branch main \
        --variables "APPLICATION_NAME=$CI_PROJECT_NAME" \
        --variables "COMMIT_SHA=$CI_COMMIT_SHA" \
        --variables "ARTIFACT_URL=$CI_JOB_URL" \
        --variables "TARGET_ENVIRONMENT=${CI_COMMIT_BRANCH == "main" ? "staging" : "production"}" \
        -R $PIPELINE_REPO
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH =~ /^release\/.*/
